class Version {

    static String version
    
    Version(String version) {
        
        this.version = version
    }
    
    static String bumpBuild(String version) {
      this.version = version
      String pattern = ~/(\d{1,3})\.(\d{1,3})\.(\d{1,3}).(\d{1,4})$/
      String newVersion = version.replaceFirst(pattern) {_,major,minor,patch,build -> "${major}.${minor}.${patch}.${(build as int) + 1}"}
      return newVersion
    }
    
    static String bumpPatch(String version) {
      this.version = version
      String pattern = ~/(\d{1,3})\.(\d{1,3})\.(\d{1,3}).(\d{1,4})$/
      String newVersion = version.replaceFirst(pattern) {_,major,minor,patch,build -> "${major}.${minor}.${(patch as int) +1}.0"}
      return newVersion
    }

    static String bumpMinor(String version) {
      this.version = version
      String pattern = ~/(\d{1,3})\.(\d{1,3})\.(\d{1,3}).(\d{1,4})$/
      String newVersion = version.replaceFirst(pattern) {_,major,minor,patch,build -> "${major}.${(minor as int) +1}.0.0"}
      return newVersion
    }
    
    static String bumpMajor(String version) {
      this.version = version
      String pattern = ~/(\d{1,3})\.(\d{1,3})\.(\d{1,3}).(\d{1,4})$/
      String newVersion = version.replaceFirst(pattern) {_,major,minor,patch,build -> "${(major as int) + 1}.0.0.0"}
      return newVersion
    }
}
